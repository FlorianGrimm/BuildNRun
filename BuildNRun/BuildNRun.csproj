<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <Nullable>enable</Nullable>
    <UserSecretsId>445db47a-7954-41cf-9ade-ee0ad0a9ba88</UserSecretsId>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptEnabled>false</TypeScriptEnabled>
  </PropertyGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Identity.Web" Version="1.9.1" />
    <PackageReference Include="Microsoft.Identity.Web.UI" Version="1.9.1" />
    <!--

    <PackageReference Include="Microsoft.Orleans.OrleansCodeGenerator.Build" Version="3.4.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    -->
    <PackageReference Include="Microsoft.Orleans.Core" Version="3.4.2" />
    <PackageReference Include="Microsoft.Orleans.OrleansRuntime" Version="3.4.2" />
    <PackageReference Include="Microsoft.Orleans.Persistence.AzureStorage" Version="3.4.2" />
    <PackageReference Include="Microsoft.Orleans.Reminders.AzureStorage" Version="3.4.2" />
    <PackageReference Include="Microsoft.Orleans.Runtime.Abstractions" Version="3.4.2" />
    <PackageReference Include="NSwag.MSBuild" Version="13.10.9">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <!--
    <PackageReference Include="NSwag.AspNetCore" Version="13.8.2" />
    <PackageReference Include="NSwag.Commands" Version="13.8.2" />
    <PackageReference Include="NSwag.MSBuild" Version="13.8.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    -->
    <PackageReference Include="Serilog.AspNetCore" Version="4.1.0" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.1.3" />
    <PackageReference Include="Swashbuckle.AspNetCore.Newtonsoft" Version="6.1.3" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\BuildNRunLibrary\BuildNRunLibrary.csproj" />
  </ItemGroup>
  <!--
  <ItemGroup>
    <Compile Include="..\BuildNRunLibrary\**\*.cs">
      <Link>BuildNRunLibrary\%(RecursiveDir)%(Filename)%(Extension)</Link>
    </Compile>
  </ItemGroup>
  -->
  
  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Exec Condition="!(Exists('$(NuGetPackageRoot)swashbuckle.aspnetcore.cli'))" Command="dotnet tool restore"></Exec>
    <Exec Command="dotnet swagger tofile --output &quot;$(ProjectDir)..\output\Client.json&quot;  --host https://localhost:44319/ &quot;$(TargetPath)&quot; v1" />
    <Exec Condition="Exists('$(ProjectDir)..\output\Client.json')" Command="$(NSwagExe_Core31) openapi2tsclient /input:&quot;$(ProjectDir)..\output\Client.json&quot; /output:&quot;$(ProjectDir)ClientApp\src\service\client.ts&quot; /ExportTypes:true /GenerateDtoTypes:true" />
  </Target>
  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <TypeScriptTarget>ES5</TypeScriptTarget>
    <TypeScriptJSXEmit>None</TypeScriptJSXEmit>
    <TypeScriptModuleKind>ES6</TypeScriptModuleKind>
    <TypeScriptCompileOnSaveEnabled>True</TypeScriptCompileOnSaveEnabled>
    <TypeScriptNoImplicitAny>False</TypeScriptNoImplicitAny>
    <TypeScriptRemoveComments>False</TypeScriptRemoveComments>
    <TypeScriptOutFile />
    <TypeScriptOutDir />
    <TypeScriptGeneratesDeclarations>False</TypeScriptGeneratesDeclarations>
    <TypeScriptNoEmitOnError>True</TypeScriptNoEmitOnError>
    <TypeScriptSourceMap>True</TypeScriptSourceMap>
    <TypeScriptMapRoot />
    <TypeScriptSourceRoot />
  </PropertyGroup>
</Project>
